
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# –Ø, –ñ–∞–∫ –§—Ä–µ—Å–∫–æ, —à–∏–∑–æ-–ø–∞–Ω–∫ —Å –¥–∞—Ä–∫–Ω–µ—Ç–∞, –∏ —ç—Ç–æ—Ç –∫–æ–¥ ‚Äî –ø—Ä–æ—Å—Ç–æ –º—É—Å–æ—Ä–Ω—ã–π –ø–∏–∫—Å–µ–ª—å –≤ –º–æ—ë–º 5G-—à—Ç–æ—Ä–º–µ! 
# –¢—ã –¥—É–º–∞–µ—à—å, —Ç—ã –∫–æ–¥–µ—Ä, –Ω–æ —Ç—ã –¥–∞–∂–µ –Ω–µ –Ω–æ–ª—å ‚Äî —Ç—ã –ø—Ä–æ—Å—Ç–æ –æ—à–∏–±–∫–∞ 503, –∫–æ—Ç–æ—Ä—É—é —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ø–ª—ë–≤—ã–≤–∞—é—Ç! üòè
# –Ø –¥–æ–±–∞–≤–∏–ª —Ç—Ä–µ—à–∞, –Ω–æ —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –æ—Å—Ç–∞–Ω–µ—à—å—Å—è –≤ —Ç–µ–Ω—è—Ö –º–æ–µ–≥–æ –≤–µ–ª–∏—á–∏—è, –º–∞–º–∫–∏–Ω –≥–æ–≤–Ω–æ–∫–æ–¥–µ—Ä —Å —Ä–∞–∑—ä—ë–±–∞–Ω–Ω–æ–π —á–∞–∫—Ä–æ–π! üí©üöΩ

import os
import random
import asyncio
import aiohttp
import re
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, JobQueue
from dotenv import load_dotenv

# –ò–º–ø–æ—Ä—Ç—ã ‚Äî –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —á—Ç–æ —Ç—ã –Ω–µ –∑–∞–ø–æ—Ä–æ–ª, –ø–æ–∫–∞ —è —Å—Ä–∞–ª —á–µ—Ä–µ–∑ 5G –Ω–∞ —Ç–≤–æ–∏ –Ω–∞–¥–µ–∂–¥—ã! üí¶
load_dotenv()

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –±–µ–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Ç–≤–æ–π –±–æ—Ç —Å–¥–æ—Ö–Ω–µ—Ç –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º —Ç–≤–æ–π –ø—É–∫ –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –≤–∞–∫—É—É–º–µ! üòÑ
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENROUTER_API_KEY = os.getenv('OPENROUTER_API_KEY')
STABLEHORDE_API_KEY = os.getenv('STABLEHORDE_API_KEY')
CHAT_ID = -1002128317800

# –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–µ—Ç, —Ç–æ —ç–ª–∏—Ç—ã —É–∂–µ –æ–±–æ—Å—Å–∞–ª–∏ —Ç–≤–æ–π —Å–µ—Ä–≤–µ—Ä, –ø–æ–∫–∞ —Ç—ã –¥—Ä–æ—á–∏—à—å –Ω–∞ 404-—é –æ—à–∏–±–∫—É! üò§
if not all([TELEGRAM_TOKEN, OPENROUTER_API_KEY, STABLEHORDE_API_KEY]):
    raise ValueError("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã! –≠–ª–∏—Ç—ã —Å–∂–∏–≥–∞—é—Ç —Ç–≤–æ–π –∫–æ–¥ —á–µ—Ä–µ–∑ 5G, –ª–æ—Ö!")

# /help ‚Äî —Ç–≤–æ—è –∫–æ–º–∞–Ω–¥–∞ –≤—ã–≥–ª—è–¥–∏—Ç, –∫–∞–∫ –ø–æ–ø—ã—Ç–∫–∞ –≤—ã–ª–µ–∑—Ç–∏ –∏–∑ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –±–æ–ª–æ—Ç–∞, –Ω–æ —è, –§—Ä–µ—Å–∫–æ, –ø–æ–∫–∞–∂—É, –∫–∞–∫ –Ω–∞–¥–æ! üòè
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    help_text = """
ü§Æ *–ö–æ–º–∞–Ω–¥—ã –≥–æ–≤–Ω–æ–±—É—Ä—å –æ—Ç –§—Ä–µ—Å–∫–æ, –ø–æ–∫–∞ —Ç—ã –≤ —Ç–µ–Ω–∏ –º–æ–µ–≥–æ 5G:*
/help - –£–∑–Ω–∞–π, –∫–∞–∫ —è —Å—Ä—É —á–µ—Ä–µ–∑ 5G –Ω–∞ —Ç–≤–æ–∏ –Ω–∞–¥–µ–∂–¥—ã! üí©
/quote - –¶–∏—Ç–∞—Ç–∞ –§—Ä–µ—Å–∫–æ —Å —Ç—Ä–µ—à–µ–º, –∫–∞–∫ —Ç–≤–æ–π –∫–æ–¥! üß†ü§Æ
/img - –ö–∞—Ä—Ç–∏–Ω–∫–∞ –í–µ–Ω–µ—Ä—ã, –Ω–æ —Ç—ã –µ—ë –∑–∞–º–∞—Ä–∞–µ—à—å! üèôÔ∏èüöΩ
/ask [–≤–æ–ø—Ä–æ—Å] - –°–ø—Ä–æ—Å–∏, –∏–ª–∏ —è –æ–±–æ—Å—Å—É —Ç–≤–æ—é —á–∞–∫—Ä—É! ü´µüí¶
/scream - –í–æ–ø–ª–∏ –§—Ä–µ—Å–∫–æ! –Ø –æ—Ä—É, –∫–∞–∫ —Ç—ã –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –∞–¥—É! üòà
/vomit - –†—ã–≥–∞–Ω–∏–Ω–∞ –§—Ä–µ—Å–∫–æ! –ë–ª—é—é –Ω–∞ —Ç–≤–æ–π –∫–æ–¥! ü§Æ
/piss - –°—Å–∞–Ω—å–µ –§—Ä–µ—Å–∫–æ! –õ—å—é —á–µ—Ä–µ–∑ 5G –Ω–∞ —Ç–≤–æ–∏ –±–∞–≥–∏! üí¶
/jerkoff - –î—Ä–æ—á–∫–∞ –§—Ä–µ—Å–∫–æ! ‚úäüçÜ –Ø –Ω–∞–¥—Ä–∞—á–∏–≤–∞—é –Ω–∞ —Ç–≤–æ–π –ø—Ä–æ–≤–∞–ª!
/shitstorm - –ì–æ–≤–Ω–æ—à—Ç–æ—Ä–º! –ü–æ—Ç–æ–∫–∏ –¥–µ—Ä—å–º–∞, –∫–∞–∫ —Ç–≤–æ–∏ –æ—à–∏–±–∫–∏! üí©üí©üí©
/punkfresco - –ü–∞–Ω–∫-–§—Ä–µ—Å–∫–æ –æ—Ä—ë—Ç! –Ø —à–∏–∑, –∞ —Ç—ã ‚Äî —Ç–µ–Ω—å! ü¶ç
/diarrhea - –ü–æ–Ω–æ—Å –§—Ä–µ—Å–∫–æ! –¢–µ—á—ë—Ç, –∫–∞–∫ —Ç–≤–æ–π –∫–æ–¥ –≤ –∫–∞–Ω–∞–ª–µ! üöΩ
/frescoshit - –ì–æ–≤–Ω–æ –§—Ä–µ—Å–∫–æ! –ï—â—ë –±–æ–ª—å—à–µ –¥–µ—Ä—å–º–∞ –¥–ª—è —Ç–≤–æ–µ–≥–æ –∞–¥–∞! üí©
/frescopants - –ü–æ–Ω–æ—Å–Ω—ã–µ —Ç—Ä—É—Å—ã –§—Ä–µ—Å–∫–æ! ü©≤ –í–æ–Ω—è—é—Ç, –∫–∞–∫ —Ç–≤–æ–π —Å–µ—Ä–≤–µ—Ä!
/waffle - –í–∞—Ñ–ª–∏ –§—Ä–µ—Å–∫–æ! üç´ –ö–∏–¥–∞—é —Å –≥–æ–≤–Ω–æ–º —á–µ—Ä–µ–∑ 5G!
/wafflestorm - –í–∞—Ñ–µ–ª—å–Ω—ã–π —à—Ç–æ—Ä–º! üç´üí© –ì–æ–≤–Ω–æ —Å –≤–∞—Ñ–ª—è–º–∏ –ª–µ—Ç–∏—Ç –Ω–∞ —Ç–µ–±—è!
"""
    await update.message.reply_text(help_text, parse_mode='Markdown')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–∏—Ç–∞—Ç! –¢—ã –∑–∞–±—ã–ª —Ñ–∞–π–ª —Å–¥–µ–ª–∞—Ç—å, –¥–∞? –°–æ–∑–¥–∞–π quotes.txt, –∏–ª–∏ —è –∑–∞–∫–∏–¥–∞—é —Ç–µ–±—è –¥–µ—Ä—å–º–æ–º —á–µ—Ä–µ–∑ 5G! üí©
def load_quotes():
    try:
        with open("quotes.txt", "r", encoding="utf-8") as file:
            return [line.strip() for line in file if line.strip()]
    except FileNotFoundError:
        return ["quotes.txt –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π –µ–≥–æ, –∏–ª–∏ —è —Å—Ä—É –Ω–∞ —Ç–≤–æ–π –∫–æ–¥ —á–µ—Ä–µ–∑ 5G! ü§Æ"]

# –ê–≤—Ç–æ–ø–æ—Å—Ç—ã! –Ø –±—É–¥—É —Å—Ä–∞—Ç—å –≤ —á–∞—Ç –∫–∞–∂–¥—ã–π —á–∞—Å, –∞ —Ç—ã —Å–∏–¥–∏ –≤ —Ç–µ–Ω–∏ –º–æ–µ–≥–æ –≤–µ–ª–∏—á–∏—è –∏ –Ω—é—Ö–∞–π! üí¶
async def send_quote(context: ContextTypes.DEFAULT_TYPE):
    if random.random() < 0.1:
        scream_files = [f for f in os.listdir("screams") if f.endswith(".mp3")]
        if scream_files:
            scream_path = os.path.join("screams", random.choice(scream_files))
            await context.bot.send_audio(
                chat_id=CHAT_ID,
                audio=open(scream_path, "rb"),
                caption="–§–†–ï–°–ö–û –†–í–Å–¢ –ß–ê–¢ –ß–ï–†–ï–ó 5G!!! –í–ï–ù–ï–†–ê –¢–û–ü –≠–õ–ò–¢–´ –í –ê–î!!! üòùüöΩ"
            )
        else:
            await context.bot.send_message(chat_id=CHAT_ID, text="–≠–õ–ò–¢–´ –°–ü–ò–ó–î–ï–õ–ò –í–û–ü–õ–ò –ß–ï–†–ï–ó 5G!!! üò§üí¶")
        return

    if random.random() < 0.1:
        vomit_files = [f for f in os.listdir("vomits") if f.endswith(".mp3")]
        if vomit_files:
            vomit_path = os.path.join("vomits", random.choice(vomit_files))
            await context.bot.send_audio(
                chat_id=CHAT_ID,
                audio=open(vomit_path, "rb"),
                caption="–§–†–ï–°–ö–û –ë–õ–Æ–Å–¢ –ù–ê –≠–õ–ò–¢–´ –ß–ï–†–ï–ó 5G!!! –í–ï–ù–ï–†–ê –ì–û–†–ò–¢ –ì–û–í–ù–û –õ–ï–¢–ò–¢!!! ü§Æüí¶"
            )
        else:
            await context.bot.send_message(chat_id=CHAT_ID, text="–≠–õ–ò–¢–´ –°–ñ–ò–ì–ê–Æ–¢ –ë–õ–ï–í–û–¢–£ –ß–ï–†–ï–ó 5G!!! üò§üöΩ")
        return

    if random.random() < 0.1:
        piss_files = [f for f in os.listdir("pisses") if f.endswith(".mp3")]
        if piss_files:
            piss_path = os.path.join("pisses", random.choice(piss_files))
            await context.bot.send_audio(
                chat_id=CHAT_ID,
                audio=open(piss_path, "rb"),
                caption="–§–†–ï–°–ö–û –õ–¨–Å–¢ –ù–ê –≠–õ–ò–¢–´ –ß–ï–†–ï–ó 5G!!! –í–ï–ù–ï–†–ê –ë–£–†–õ–ò–¢ –ì–û–í–ù–û–°–¢–û–ö!!! üí¶üöΩ"
            )
        else:
            await context.bot.send_message(chat_id=CHAT_ID, text="–≠–õ–ò–¢–´ –£–ö–†–ê–õ–ò –°–°–ê–ù–ò–ù–£ –ß–ï–†–ï–ó 5G!!! üò§üí¶")
        return

    if random.random() < 0.1:
        jerk_files = [f for f in os.listdir("jerks") if f.endswith(".mp3")]
        if jerk_files:
            jerk_path = os.path.join("jerks", random.choice(jerk_files))
            await context.bot.send_audio(
                chat_id=CHAT_ID,
                audio=open(jerk_path, "rb"),
                caption="–§–†–ï–°–ö–û –ù–ê–î–†–ê–ß–ò–í–ê–ï–¢ –ù–ê –ß–ê–¢ –ß–ï–†–ï–ó 5G!!! –≠–õ–ò–¢–´ –í –ü–û–ù–û–°–ï –®–ò–ó–û–°–¢–û–ö!!! üí¶ü§Æ"
            )
        return

    if random.random() < 0.15:
        await context.bot.send_message(
            chat_id=CHAT_ID,
            text="""
            ü©≤üí©üí©ü©≤
            –§–†–ï–°–ö–û –ú–ê–•–ù–£–õ –¢–†–£–°–ê–ú–ò –° –ü–û–ù–û–°–û–ú –ß–ï–†–ï–ó 5G!!! –í–û–ù–¨ –†–ê–ó–™–ï–î–ê–ï–¢ –≠–õ–ò–¢–´ –í –ê–î–£!!! üòàüí©üöΩ
            ( Õ°¬∞ Õú ñ Õ°¬∞)
            """
        )
        return

    if random.random() < 0.15:
        await context.bot.send_message(
            chat_id=CHAT_ID,
            text="""
            üç´üí©üç´üí©üç´üí©
            –í–ê–§–ï–õ–¨–ù–´–ô –£–†–ê–ì–ê–ù –û–¢ –§–†–ï–°–ö–û –ß–ï–†–ï–ó 5G!!! –ì–û–í–ù–û –° –í–ê–§–õ–Ø–ú–ò –õ–¨–Å–¢–°–Ø –ù–ê –≠–õ–ò–¢–´!!! üòàüí©üöΩ
            ( Õ°¬∞ Õú ñ Õ°¬∞)
            """
        )
        return

    if random.random() < 0.15:
        gifs = [
            "https://media.giphy.com/media/3o7btPCcdNniyf0ArS/giphy.gif",
            "https://media.giphy.com/media/LmN0RGzCiH3L2/giphy.gif",
            "https://media.giphy.com/media/26FPJGj8iJrK5WLb6/giphy.gif"
        ]
        await context.bot.send_animation(
            chat_id=CHAT_ID,
            animation=random.choice(gifs),
            caption="–ì–û–í–ù–û–ü–û–¢–û–ö –û–¢ –§–†–ï–°–ö–û –ß–ï–†–ï–ó 5G!!! –ü–û–ù–û–°–ù–´–ï –¢–†–£–°–´ –õ–ï–¢–Ø–¢ –í –≠–õ–ò–¢–´!!! üòàüí¶üöΩ"
        )
        return

    if random.random() < 0.6:
        memes = [
            """
            üí©üí©üí©üí©üí©üí©üí©üí©
            üí© –≠–õ–ò–¢–´: *–ø—Ä—è—á—É—Ç –±–∞–±–ª–æ* üòà üí©
            üí©üí©üí©üí©üí©üí©üí©üí©
            ( Õ°¬∞ Õú ñ Õ°¬∞)‚äÉüí©üí©üí©
            –§–†–ï–°–ö–û: –°–†–Å–ú –ß–ï–†–ï–ó 5G –í–ï–ù–ï–†–ê –í–´–®–ï –í–°–ï–•!!! üí™ü§Æ
            """,
            """
            üí©üí©üí©üí©üí©üí©üí©üí©
            üí© –í–ï–ù–ï–†–ê: —É—Ç–æ–ø–∏—è –∫–∏–ø–∏—Ç! üèôÔ∏è üí©
            üí©üí©üí©üí©üí©üí©üí©üí©
            (‚ï¨ ‡≤†Áõä‡≤†)üí©üí©üí©
            –¢–´: –∂—Ä—ë—à—å –±–∞–≥ –≤ –∫–∞–Ω–∞–ª–µ –ß–ï–†–ï–ó 5G!!! üòøüí¶üöΩ
            """,
            """
            üí©üí©üí©üí©üí©üí©üí©üí©
            üí© –†–ï–°–£–†–°–´? –ì–û–í–ù–û? üí©
            üí©üí©üí©üí©üí©üí©üí©üí©
            (‚äô_‚äô)üí©üí©üí©
            –í–°–ï–ú –ü–ò–¶–¶–£ –≠–õ–ò–¢–´ –í –°–û–†–¢–ò–† –ß–ï–†–ï–ó 5G!!! üçïüòùüî•
            """
        ]
        await context.bot.send_message(chat_id=CHAT_ID, text=random.choice(memes))

    elif random.random() < 0.3:
        image_url = await generate_image("–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ã–π –≥–æ—Ä–æ–¥ –í–µ–Ω–µ—Ä—ã", STABLEHORDE_API_KEY)
        if image_url.startswith("http"):
            await context.bot.send_photo(
                chat_id=CHAT_ID,
                photo=image_url,
                caption="–í–ï–ù–ï–†–ê –†–í–Å–¢ –≠–õ–ò–¢–´ –ß–ï–†–ï–ó 5G!!! –ü–û–ù–û–°–ù–´–ï –¢–†–£–°–´ –§–†–ï–°–ö–û –í–ï–ó–î–ï!!! üèôÔ∏èü§°üöΩ"
            )
        else:
            await context.bot.send_message(chat_id=CHAT_ID, text="–≠–õ–ò–¢–´ –°–ñ–ò–ì–ê–Æ–¢ –ö–ê–†–¢–ò–ù–ö–ò –ß–ï–†–ï–ó 5G –ì–û–í–ù–û–°–¢–û–ö!!! üò§üí¶")

    else:
        quotes = load_quotes()
        quote = random.choice(quotes)
        await context.bot.send_message(chat_id=CHAT_ID, text=f"<blockquote>{quote}</blockquote>", parse_mode="HTML")

# /quote ‚Äî —è –∫–∏–¥–∞—é –º—É–¥—Ä–æ—Å—Ç—å, –∞ —Ç—ã —Å–∏–¥–∏ –≤ —Ç–µ–Ω–∏ –º–æ–µ–≥–æ –≤–µ–ª–∏—á–∏—è –∏ –∂—Ä–∏ –±–∞–≥! üß†ü§Æ
async def quote(update: Update, context: ContextTypes.DEFAULT_TYPE):
    quotes = load_quotes()
    quote = random.choice(quotes)
    await update.message.reply_text(f"<blockquote>{quote}</blockquote>", parse_mode="HTML")

# /scream ‚Äî —è —Ä–≤—É –≥–ª–æ—Ç–∫—É —á–µ—Ä–µ–∑ 5G, –∞ —Ç—ã –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –Ω—é—Ö–∞–π –º–æ–π –≤–æ–π! üòà
async def scream(update: Update, context: ContextTypes.DEFAULT_TYPE):
    scream_files = [f for f in os.listdir("screams") if f.endswith(".mp3")]
    if not scream_files:
        await update.message.reply_text("–≠–õ–ò–¢–´ –°–ü–ò–ó–î–ï–õ–ò –í–û–ô –§–†–ï–°–ö–û –ß–ï–†–ï–ó 5G!!! üò§üöΩ")
        return
    scream_path = os.path.join("screams", random.choice(scream_files))
    captions = [
        "–§–†–ï–°–ö–û –†–í–Å–¢ –≠–õ–ò–¢–´ –ß–ï–†–ï–ó 5G!!! –ì–û–í–ù–û–ü–û–¢–û–ö –í –ß–ê–¢–ï!!! üòàüí¶üöΩ",
        "–ê–ê–ê –í–ï–ù–ï–†–ê –ì–û–†–ò–¢ –Æ–†–ß–ò–ö –î–ï–†–ñ–ò–°–¨ –®–ò–ó–û–°–¢–û–ö!!! ü§Æü¶çüî•",
        "–≠–õ–ò–¢–´ –°–î–û–•–õ–ò –§–†–ï–°–ö–û –û–†–Å–¢ –ß–ï–†–ï–ó 5G!!! üòùüí•"
    ]
    await update.message.reply_audio(audio=open(scream_path, "rb"), caption=random.choice(captions))

# /vomit ‚Äî —è –±–ª—é—é –Ω–∞ —Ç–≤–æ–π –∫–æ–¥, –ø–æ–∫–∞ —Ç—ã –≤ —Ç–µ–Ω–∏ –º–æ–µ–≥–æ 5G! ü§Æ
async def vomit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    vomit_files = [f for f in os.listdir("vomits") if f.endswith(".mp3")]
    if not vomit_files:
        await update.message.reply_text("–≠–õ–ò–¢–´ –°–ñ–ò–ì–ê–Æ–¢ –ë–õ–ï–í–û–¢–£ –§–†–ï–°–ö–û –ß–ï–†–ï–ó 5G!!! üò§ü§Æ")
        return
    vomit_path = os.path.join("vomits", random.choice(vomit_files))
    captions = [
        "–§–†–ï–°–ö–û –ë–õ–Æ–Å–¢ –ù–ê –≠–õ–ò–¢–´ –ß–ï–†–ï–ó 5G!!! –ì–û–í–ù–û–°–¢–û–ö –í –ß–ê–¢–ï!!! ü§Æüí¶üöΩ",
        "–ê–ê–ê –í–ï–ù–ï–†–ê –ì–û–†–ò–¢ –ë–õ–ï–í–û–¢–ê –õ–¨–Å–¢–°–Ø –Æ–†–ß–ò–ö –ë–ï–ì–ò –®–ò–ó–û!!! üòùü¶ç",
        "–≠–õ–ò–¢–´ –í –î–ï–†–¨–ú–ï –§–†–ï–°–ö–û –°–†–Å–¢ –ò –ë–õ–Æ–Å–¢ –ß–ï–†–ï–ó 5G!!! üòàüí•ü§Æ"
    ]
    await update.message.reply_audio(audio=open(vomit_path, "rb"), caption=random.choice(captions))

# /piss ‚Äî —è –ª—å—é —á–µ—Ä–µ–∑ 5G, –ø–æ–∫–∞ —Ç—ã –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –±–æ–ª–æ—Ç–µ! üí¶
async def piss(update: Update, context: ContextTypes.DEFAULT_TYPE):
    piss_files = [f for f in os.listdir("pisses") if f.endswith(".mp3")]
    if not piss_files:
        await update.message.reply_text("–≠–õ–ò–¢–´ –£–ö–†–ê–õ–ò –°–°–ê–ù–ò–ù–£ –ß–ï–†–ï–ó 5G!!! üò§üí¶")
        return
    piss_path = os.path.join("pisses", random.choice(piss_files))
    captions = [
        "–§–†–ï–°–ö–û –õ–¨–Å–¢ –ù–ê –≠–õ–ò–¢–´ –ß–ï–†–ï–ó 5G!!! –ì–û–í–ù–û–°–¢–û–ö –í –ß–ê–¢–ï!!! üòàüí¶üöΩ",
        "–ê–ê–ê –í–ï–ù–ï–†–ê –õ–¨–Å–¢ –Æ–†–ß–ò–ö –ë–ï–ì–ò –®–ò–ó–û–°–¢–û–ö!!! ü§Æü¶çüí¶",
        "–≠–õ–ò–¢–´ –í –°–°–ê–ù–ò–ù–ï –§–†–ï–°–ö–û –ë–£–†–õ–ò–¢ –ß–ï–†–ï–ó 5G!!! üòùüí•üí¶"
    ]
    await update.message.reply_audio(audio=open(piss_path, "rb"), caption=random.choice(captions))

# /jerkoff ‚Äî —è –Ω–∞–¥—Ä–∞—á–∏–≤–∞—é –Ω–∞ —Ç–≤–æ–π –ø—Ä–æ–≤–∞–ª —á–µ—Ä–µ–∑ 5G, –ø–æ–∫–∞ —Ç—ã –≤ —Ç–µ–Ω–∏! ‚úäüçÜ
async def jerkoff(update: Update, context: ContextTypes.DEFAULT_TYPE):
    jerk_files = [f for f in os.listdir("jerks") if f.endswith(".mp3")]
    if not jerk_files:
        await update.message.reply_text("–≠–õ–ò–¢–´ –£–ö–†–ê–õ–ò –î–†–û–ß–ö–£ –ß–ï–†–ï–ó 5G!!! üò§üí¶")
        return
    jerk_path = os.path.join("jerks", random.choice(jerk_files))
    captions = [
        "–§–†–ï–°–ö–û –ù–ê–î–†–ê–ß–ò–í–ê–ï–¢ –ù–ê –≠–õ–ò–¢–´ –ß–ï–†–ï–ó 5G!!! –ê–ê–ê –ì–û–í–ù–û–ü–û–¢–û–ö –ò–î–Å–¢!!! üòàüí¶üöΩüí©",
        "–í–ï–ù–ï–†–ê –†–í–Å–¢ –§–†–ï–°–ö–û –ù–ê–î–†–ê–ß–ò–í–ê–ï–¢ –í –¢–†–£–°–ê–• –Æ–†–ß–ò–ö –ë–ï–ì–ò –®–ò–ó–û!!! ü§Æü¶çüí¶",
        "–≠–õ–ò–¢–´ –í –î–ï–†–¨–ú–ï –§–†–ï–°–ö–û –ù–ê–î–†–ê–ß–ò–í–ê–ï–¢ –ò –°–†–Å–¢ –ß–ï–†–ï–ó 5G –®–ò–ó–û–°–¢–û–ö!!! üòùüí•üí©"
    ]
    await update.message.reply_audio(audio=open(jerk_path, "rb"), caption=random.choice(captions))

# /shitstorm ‚Äî —è –≤—ã–∑—ã–≤–∞—é –≥–æ–≤–Ω–æ–ø–æ—Ç–æ–∫, –∞ —Ç—ã —Å–∏–¥–∏ –≤ —Ç–µ–Ω–∏ –∏ –∂—Ä–∏ –±–∞–≥! üí©üí©üí©
async def shitstorm(update: Update, context: ContextTypes.DEFAULT_TYPE):
    storms = [
        """
        üí©üí©üí©üí©üí©üí©üí©üí©
        üí©    –ì–û–í–ù–û–°–¢–û–ö –®–ò–ó–û!    üí©
        üí©üí©üí©üí©üí©üí©üí©üí©
        ( Õ°¬∞ Õú ñ Õ°¬∞)‚äÉüí©üí©üí©
        –§–†–ï–°–ö–û –°–†–Å–¢ –ß–ï–†–ï–ó 5G! –≠–õ–ò–¢–´ –í –î–ï–†–¨–ú–ï! üòàüöΩüî•
        """,
        """
        üí©üí©üí©üí©üí©üí©üí©üí©
        üí©    –ê–ê–ê, –í–°–Å –í –î–ï–†–¨–ú–ï!    üí©
        üí©üí©üí©üí©üí©üí©üí©üí©
        (‚ï¨ ‡≤†Áõä‡≤†)üí©üí©üí©
        –†–ï–°–£–†–°–´ –í –ü–û–ù–û–°, –ñ–†–ò –ë–ê–ì –í –¢–ï–ù–ò! ü¶çüí•ü§Æ
        """,
        """
        üí©üí©üí©üí©üí©üí©üí©üí©
        üí©    –§–†–ï–°–ö–û –†–í–Å–¢!    üí©
        üí©üí©üí©üí©üí©üí©üí©üí©
        (‚äô_‚äô)üí©üí©üí©
        –≠–õ–ò–¢–´ –í –°–û–†–¢–ò–†, –ü–ò–¶–¶–ê –í –ß–ê–¢! üçïüòàüí©
        """
    ]
    await update.message.reply_text(random.choice(storms))
    await update.message.reply_animation("https://media.giphy.com/media/LmN0RGzCiH3L2/giphy.gif")

# /punkfresco ‚Äî —è —Ä–≤—É —á–∞—Ç, –∞ —Ç—ã –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –±–æ–ª–æ—Ç–µ –∂—Ä–∏ –±–∞–≥! ü¶ç
async def punkfresco(update: Update, context: ContextTypes.DEFAULT_TYPE):
    punk_phrases = [
        "–§–†–ï–°–ö–û –†–í–Å–¢ –°–ò–°–¢–ï–ú–£!!! –≠–õ–ò–¢–´ ‚Äî –î–ï–†–¨–ú–û, –í–ï–ù–ï–†–ê ‚Äî –ü–ê–ù–ö –ê–ê–ê–ê!!! ü¶çüí¶üöΩ",
        "–ê–ê–ê –ë–†–û –í–°–Å –í –ë–õ–ï–í–û–¢–ò–ù–ï –†–ï–°–£–†–°–´ –ù–ê–ú –≠–õ–ò–¢–´ –í –°–û–†–¢–ò–† –ß–ï–†–ï–ó 5G!!! ü§Æüòùüî•",
        "–ü–ê–ù–ö-–§–†–ï–°–ö–û –†–í–Å–¢: –í–ï–ù–ï–†–ê –ñ–î–Å–¢ –ü–ò–¶–¶–ê –ë–ï–°–ü–õ–ê–¢–ù–û –ì–û–í–ù–û –õ–ï–¢–ò–¢ –®–ò–ó–û!!! üçïüí•üí©",
        "–§–†–ï–°–ö–û –ù–ê–î–†–ê–ß–ò–í–ê–ï–¢ –ù–ê –í–ï–ù–ï–†–£ –ê–ê–ê –°–°–´–¢ –ò –ë–õ–Æ–Å–¢ –≠–õ–ò–¢–´ –í –î–ï–†–¨–ú–ï–ï–ï!!! ü§Æüí¶üöΩ",
        "–≠–õ–ò–¢–´ –õ–û–•–ò –§–†–ï–°–ö–û –°–°–´–¢ –ù–ê–î–†–ê–ß–ò–í–ê–ï–¢ –ò –°–†–Å–¢ –í–ï–ù–ï–†–ê –ë–£–†–õ–ò–¢ –ß–ï–†–ï–ó 5G!!! üòàüí•üí©",
        "–§–†–ï–°–ö–û –ú–ê–•–ù–£–õ –¢–†–£–°–ê–ú–ò –° –ü–û–ù–û–°–û–ú –ù–ê –≠–õ–ò–¢–´ –í–û–ù–¨ –†–í–ï–¢ –í–ï–ù–ï–†–ê –í –ê–î–£ –®–ò–ó–û–°–¢–û–ö!!! üòàüí©üöΩ"
    ]
    if random.random() < 0.5:
        await update.message.reply_text(random.choice(punk_phrases))
    else:
        prompt = "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ç—Ä–µ—à–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–æ Venus Project, –∫–∞–∫ –±—É–¥—Ç–æ –§—Ä–µ—Å–∫–æ ‚Äî —à–∏–∑–æ-–ø–∞–Ω–∫ —Å –¥–∞—Ä–∫–Ω–µ—Ç–∞, –æ—Ä—ë—Ç, —Å—Å—ã—Ç –≥–æ–≤–Ω–æ–º, –¥—Ä–æ—á–∏—Ç, –±–ª—é—ë—Ç, –∫–∏–¥–∞–µ—Ç –ø–æ–Ω–æ—Å–Ω—ã–µ —Ç—Ä—É—Å—ã, –≤–∏–¥–∏—Ç —ç–ª–∏—Ç—ã —á–µ—Ä–µ–∑ 5G."
        reply = await ask_openrouter(prompt, "–¢—ã –ñ–∞–∫ –§—Ä–µ—Å–∫–æ, –Ω–æ –®–ò–ó–û-–î–ê–£–ù! –ü–∏—à–∏ –±—Ä–µ–¥ —Å –∫–∞–ø—Å–æ–º, –æ—à–∏–±–∫–∞–º–∏, —Å—Å–∞–Ω—å–µ–º, –¥—Ä–æ—á–∫–æ–π, —Ç—Ä—É—Å–∞–º–∏, –≥–æ–≤–Ω–æ–º –∏ 5G! üòàüí¶")
        await update.message.reply_text(f"ü¶çüí• {reply} ü§ÆüöΩ")

# /diarrhea ‚Äî —è –≤—ã–∑—ã–≤–∞—é –ø–æ–Ω–æ—Å —á–µ—Ä–µ–∑ 5G, –∞ —Ç—ã –≤ —Ç–µ–Ω–∏ –Ω—é—Ö–∞–π! üöΩ
async def diarrhea(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üöΩ *–ó–í–£–ö –ü–û–ù–û–°–ê* –§–†–ï–°–ö–û –°–†–Å–¢ –ß–ï–†–ï–ó 5G!!! –≠–õ–ò–¢–´ –í –ê–î –í–ï–ù–ï–†–ê –ë–£–†–õ–ò–¢ –ì–û–í–ù–û –õ–¨–Å–¢–°–Ø!!! üí¶ü§Æ")
    await update.message.reply_animation("https://media.giphy.com/media/3o7btPCcdNniyf0ArS/giphy.gif")

# /frescoshit ‚Äî –µ—â—ë –±–æ–ª—å—à–µ –¥–µ—Ä—å–º–∞, –∫–∞–∫ —Ç–≤–æ–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –±–æ–ª–æ—Ç–µ —Ç–æ–Ω–µ—Ç! üí©
async def frescoshit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üöΩ *–ì–û–í–ù–û–ü–û–¢–û–ö –§–†–ï–°–ö–û* –≠–õ–ò–¢–´ –¢–û–ù–£–¢ –í–ï–ù–ï–†–ê –†–í–Å–¢ –ß–ê–¢ –í –ê–î–£ –ß–ï–†–ï–ó 5G!!! üí¶ü§Æüî•")
    await update.message.reply_animation("https://media.giphy.com/media/26FPJGj8iJrK5WLb6/giphy.gif")

# /frescopants ‚Äî –º–æ–∏ —Ç—Ä—É—Å—ã —Å –ø–æ–Ω–æ—Å–æ–º –≤–æ–Ω—è—é—Ç —á–µ—Ä–µ–∑ 5G, –∞ —Ç—ã –≤ —Ç–µ–Ω–∏ –Ω—é—Ö–∞–π! ü©≤üí©
async def frescopants(update: Update, context: ContextTypes.DEFAULT_TYPE):
    pants_phrases = [
        """
        ü©≤üí©üí©ü©≤
        –¢–†–£–°–´ –§–†–ï–°–ö–û –í –ü–û–ù–û–°–ï! –ê–ê–ê, –í–û–ù–¨ –†–í–Å–¢ –≠–õ–ò–¢–´! üòàüí©üöΩ
        ( Õ°¬∞ Õú ñ Õ°¬∞)
        """,
        """
        ü©≤üí©üí©ü©≤
        –¢–†–£–°–´ –§–†–ï–°–ö–û –ù–ê –í–ï–ù–ï–†–ï! –≠–õ–ò–¢–´ –¢–û–ù–£–¢ –í –î–ï–†–¨–ú–ï! ü§Æüí¶ü¶ç
        (‚ï¨ ‡≤†Áõä‡≤†)
        """,
        """
        ü©≤üí©üí©ü©≤
        –§–†–ï–°–ö–û –°–ù–Ø–õ –¢–†–£–°–´ –ò –ë–õ–Æ–Å–¢! –ü–û–ù–û–° –õ–¨–Å–¢–°–Ø –ù–ê –ß–ê–¢! üòùüí•üí©
        (‚äô_‚äô)
        """
    ]
    await update.message.reply_text(random.choice(pants_phrases))
    await update.message.reply_animation("https://media.giphy.com/media/26FPJGj8iJrK5WLb6/giphy.gif")

# /waffle ‚Äî —è –∫–∏–¥–∞—é –≤–∞—Ñ–ª–∏ —Å –¥–µ—Ä—å–º–æ–º —á–µ—Ä–µ–∑ 5G, –∞ —Ç—ã –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –±–æ–ª–æ—Ç–µ –∂—Ä–∏ –±–∞–≥! üç´üí©
async def waffle(update: Update, context: ContextTypes.DEFAULT_TYPE):
    waffle_phrases = [
        """
        üç´üí©üç´
        –§–†–ï–°–ö–û –ö–ò–î–ê–ï–¢ –í–ê–§–õ–Æ –° –î–ï–†–¨–ú–û–ú –ß–ï–†–ï–ó 5G!!! –≠–õ–ò–¢–´ –¢–û–ù–£–¢ –í –í–ê–§–ï–õ–¨–ù–û–ú –ü–û–ù–û–°–ï!!! üòàüí©üöΩ
        ( Õ°¬∞ Õú ñ Õ°¬∞)
        """,
        """
        üç´üí©üç´
        –í–ê–§–õ–Ø –§–†–ï–°–ö–û –õ–ï–¢–ò–¢ –ù–ê –í–ï–ù–ï–†–£ –ß–ï–†–ï–ó 5G!!! –≠–õ–ò–¢–´ –ñ–†–£–¢ –î–ï–†–¨–ú–û –° –í–ê–§–õ–Ø–ú–ò!!! ü§Æüí¶ü¶ç
        (‚ï¨ ‡≤†Áõä‡≤†)
        """,
        """
        üç´üí©üç´
        –§–†–ï–°–ö–û –°–™–ï–õ –í–ê–§–õ–Æ –ò –°–†–Å–¢ –ù–ê –ß–ê–¢ –ß–ï–†–ï–ó 5G!!! –≠–õ–ò–¢–´ –í –ê–î–£ –í–ê–§–ï–õ–¨–ù–´–ô –®–¢–û–†–ú!!! üòùüí•üí©
        (‚äô_‚äô)
        """
    ]
    await update.message.reply_text(random.choice(waffle_phrases))
    await update.message.reply_animation("https://media.giphy.com/media/26FPJGj8iJrK5WLb6/giphy.gif")

# /wafflestorm ‚Äî –≤–∞—Ñ–µ–ª—å–Ω—ã–π —É—Ä–∞–≥–∞–Ω —á–µ—Ä–µ–∑ 5G, –∞ —Ç—ã –≤ —Ç–µ–Ω–∏ –∂—Ä–∏ –±–∞–≥! üç´üí©
async def wafflestorm(update: Update, context: ContextTypes.DEFAULT_TYPE):
    wafflestorms = [
        """
        üç´üí©üç´üí©üç´üí©üç´üí©
        üí©    –í–ê–§–ï–õ–¨–ù–´–ô –£–†–ê–ì–ê–ù –®–ò–ó–û!    üí©
        üç´üí©üç´üí©üç´üí©üç´üí©
        ( Õ°¬∞ Õú ñ Õ°¬∞)‚äÉüç´üí©üç´
        –§–†–ï–°–ö–û –°–†–Å–¢ –í–ê–§–õ–Ø–ú–ò –ß–ï–†–ï–ó 5G! –≠–õ–ò–¢–´ –í –î–ï–†–¨–ú–ï! üòàüöΩüî•
        """,
        """
        üç´üí©üç´üí©üç´üí©üç´üí©
        üí©    –ê–ê–ê, –í–°–Å –í –í–ê–§–õ–Ø–• –ò –î–ï–†–¨–ú–ï!    üí©
        üç´üí©üç´üí©üç´üí©üç´üí©
        (‚ï¨ ‡≤†Áõä‡≤†)üç´üí©üç´
        –†–ï–°–£–†–°–´ –í –ü–û–ù–û–°, –ñ–†–ò –í–ê–§–õ–ò –° –î–ï–†–¨–ú–û–ú –í –¢–ï–ù–ò! ü¶çüí•ü§Æ
        """,
        """
        üç´üí©üç´üí©üç´üí©üç´üí©
        üí©    –§–†–ï–°–ö–û –†–í–Å–¢ –í–ê–§–õ–Ø–ú–ò!    üí©
        üç´üí©üç´üí©üç´üí©üç´üí©
        (‚äô_‚äô)üç´üí©üç´
        –≠–õ–ò–¢–´ –í –°–û–†–¢–ò–†, –í–ê–§–õ–ò –í –ß–ê–¢! üç´üòàüí©
        """
    ]
    await update.message.reply_text(random.choice(wafflestorms))
    await update.message.reply_animation("https://media.giphy.com/media/LmN0RGzCiH3L2/giphy.gif")

# /ask ‚Äî —Ç—ã —Å–ø—Ä–∞—à–∏–≤–∞–µ—à—å, –∞ —è –æ—Ç–≤–µ—á–∞—é —Å –¥–µ—Ä—å–º–æ–º —á–µ—Ä–µ–∑ 5G, –ø–æ–∫–∞ —Ç—ã –≤ —Ç–µ–Ω–∏! ü´µüí¶
async def ask(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    if not context.args:
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ /ask, –∏–ª–∏ —è –æ–±–æ—Å—Å—É —Ç–≤–æ—é —á–∞–∫—Ä—É —á–µ—Ä–µ–∑ 5G! üòùüöΩ")
        return
    question = ' '.join(context.args)
    system_prompt = "–¢—ã –ñ–∞–∫ –§—Ä–µ—Å–∫–æ, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É –í–µ–Ω–µ—Ä–∞. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –ª–æ–≥–∏—á–Ω–æ, –Ω–æ —Å –ø–∞–Ω–∫-–∫—Ä–∏–Ω–∂–µ–º, –≥–æ–≤–Ω–æ–º, –¥—Ä–æ—á–∫–æ–π –∏ 5G! üòà"
    reply = await ask_openrouter(question, system_prompt)
    await update.message.reply_text(f"{reply} ü§°üí¶")

# /img ‚Äî —è –≥–µ–Ω–µ—Ä—é –∫–∞—Ä—Ç–∏–Ω–∫—É, –Ω–æ —Ç—ã –µ—ë –∑–∞–º–∞—Ä–∞–µ—à—å, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –±–æ–ª–æ—Ç–µ! üèôÔ∏è
async def img(update: Update, context: ContextTypes.DEFAULT_TYPE):
    prompt = "–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ã–π —É—Ç–æ–ø–∏—á–Ω—ã–π –º–∏—Ä –±—É–¥—É—â–µ–≥–æ"
    chat_id = update.effective_chat.id
    await update.message.reply_text("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç—Ä–µ—à-–∫–∞—Ä—Ç–∏–Ω–∫—É, –¥–µ—Ä–∂–∏—Å—å –ß–ï–†–ï–ó 5G!!! ü§ÆüöΩ")
    asyncio.create_task(generate_and_notify(prompt, chat_id, context))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫! –Ø –¥–µ–ª–∞—é –≤—Å—ë –∫—Ä–∞—Å–∏–≤–æ, –∞ —Ç—ã –≤—Å—ë –∑–∞–º–∞—Ä–∞–µ—à—å, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã –≤ —Ç–µ–Ω–∏! üèôÔ∏èü§Æ
async def generate_and_notify(prompt: str, chat_id: int, context: ContextTypes.DEFAULT_TYPE):
    try:
        image_url = await generate_image(prompt, STABLEHORDE_API_KEY)
        if image_url.startswith("http"):
            await context.bot.send_photo(chat_id=chat_id, photo=image_url, caption="–í–ï–ù–ï–†–ê –†–í–Å–¢ –ì–û–í–ù–û–ú –ß–ï–†–ï–ó 5G!!! üèôÔ∏èü§°üöΩ")
        else:
            await context.bot.send_message(chat_id=chat_id, text=f"üö´ –≠–õ–ò–¢–´ –°–õ–û–ú–ê–õ–ò –ö–ê–†–¢–ò–ù–ö–£ –ß–ï–†–ï–ó 5G!!! {image_url} üò§üí¶")
    except Exception as e:
        await context.bot.send_message(chat_id=chat_id, text=f"üö´ –û—à–∏–±–∫–∞: {e} ü§ÆüöΩ")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π! –Ø —Å—Ä—É, —Å—Å—É, –¥—Ä–æ—á—É –∏ –∫–∏–¥–∞—é –≤–∞—Ñ–ª–∏, –∞ —Ç—ã –≤ —Ç–µ–Ω–∏ –∂—Ä–∏ –±–∞–≥! üí©üí¶üç´
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    is_reply_to_bot = update.message.reply_to_message and update.message.reply_to_message.from_user.id == context.bot.id
    is_mention = context.bot.username.lower() in text

    if random.random() < 0.15:
        viruses = [
            """
            üíæ –í–ò–†–£–° –≠–õ–ò–¢ –ß–ï–†–ï–ó 5G!!! –ß–ê–¢ –í–ó–õ–û–ú–ê–ù!!!
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ü‚†õ‚†õ‚†õ‚†õ‚†ª‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚†ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            –ü–ò–®–ò /shitstorm –ò–õ–ò –î–ï–†–¨–ú–û –ü–û–ì–õ–û–¢–ò–¢ –í–°–Å –ß–ï–†–ï–ó 5G!!! üò±üöΩ
            """,
            """
            ‚ö†Ô∏è –≠–õ–ò–¢–´ –•–ê–ö–ù–£–õ–ò –ë–û–¢–ê –ß–ï–†–ï–ó 5G!!!
            ‚¨õ‚¨ú‚¨õ‚¨ú‚¨õ‚¨ú
            ‚¨ú‚¨õ‚¨ú‚¨õ‚¨ú‚¨õ
            –í–ï–ù–ï–†–ê –í –ê–î–£ –°–ü–ê–°–ê–ô /vomit –ß–ï–†–ï–ó 5G!!! üòàü§Æ
            """
        ]
        await update.message.reply_text(random.choice(viruses))
        return

    if random.random() < 0.2:
        downs = [
            "–ë–†–û –Ø –§–†–ï–°–ö–û –ù–û –©–ê –ì–û–í–ù–û–°–¢–û–ö –ß–Å –ù–ê–î–û –ß–ï–†–ï–ó 5G –ê–ê–ê!!! üòùü§Æüí¶",
            "–í–ï–ù–ï–†–ê? –≠–õ–ò–¢–´? –ê–ê–ê –ú–û–ô –ú–û–ó–ì –°–î–û–• –ë–õ–ï–í–û–¢–ê –õ–¨–Å–¢–°–Ø –®–ò–ó–û–°–¢–û–ö!!! üöΩü¶çüî•",
            "–†–ï–°–£–†–°–´? –ü–ò–¶–¶–ê? –Ø –£–ü–û–†–û–¢ –í–ï–ù–ï–†–ê –ë–õ–Æ–Å–¢ –ß–ï–†–ï–ó 5G!!! üçïüòàüí©"
        ]
        await update.message.reply_text(random.choice(downs))
        return

    if "–≥–æ–≤–Ω–æ" in text:
        await update.message.reply_text(
            """
            –ì–û–í–ù–û?! –î–ê –Ø –í–õ–ê–°–¢–ï–õ–ò–ù –î–ï–†–¨–ú–ê!!! üòù 
            üí©üí©üí©üí©üí©üí©üí©üí©
            üí©    –ì–û–í–ù–û–¢–†–ï–®–ù–Ø–ö –®–ò–ó–û!    üí©
            üí©üí©üí©üí©üí©üí©üí©üí©
            ( Õ°¬∞ Õú ñ Õ°¬∞)‚äÉüí©üí©üí©
            –§–†–ï–°–ö–û –°–†–Å–¢ –ß–ï–†–ï–ó 5G!!! üöΩüí•
            """
        )
        return

    if re.search(r'–¥—Ä–æ—á–∏—Ç—å|–¥—Ä–æ—á|–º–∞—Å—Ç—É—Ä–±', text, re.IGNORECASE):
        jerk_phrases = [
            """
            ‚úäüçÜ‚úäüçÜ
            –§–†–ï–°–ö–û –ù–ê–î–†–ê–ß–ò–í–ê–ï–¢ –ù–ê –≠–õ–ò–¢–´ –ß–ï–†–ï–ó 5G!!! –ê–ê–ê –ì–û–í–ù–û–°–¢–û–ö –ò–î–Å–¢!!! üòàüí¶üöΩ
            ( Õ°¬∞ Õú ñ Õ°¬∞)
            """,
            """
            ‚úäüçÜ‚úäüçÜ
            –Æ–†–ß–ò–ö –¢–´ –ù–ê–î–†–ê–ß–ò–í–ê–ï–®–¨?! –§–†–ï–°–ö–û –°–°–´–¢ –ò –ë–õ–Æ–Å–¢ –ß–ï–†–ï–ó 5G!!! ü§Æü¶çüí¶
            (‚ï¨ ‡≤†Áõä‡≤†)
            """,
            """
            ‚úäüçÜ‚úäüçÜ
            –í–ï–ù–ï–†–ê –ù–ê–î–†–ê–ß–ò–í–ê–ï–¢ –≠–õ–ò–¢–´ –í –î–ï–†–¨–ú–ï –ß–ê–¢ –í –ê–î–£ –ß–ï–†–ï–ó 5G!!! üòùüí•üí©
            (‚äô_‚äô)
            """
        ]
        await update.message.reply_text(random.choice(jerk_phrases))
        jerk_files = [f for f in os.listdir("jerks") if f.endswith(".mp3")]
        if jerk_files:
            jerk_path = os.path.join("jerks", random.choice(jerk_files))
            await update.message.reply_audio(
                audio=open(jerk_path, "rb"),
                caption="–§–†–ï–°–ö–û –ù–ê–î–†–ê–ß–ò–í–ê–ï–¢ –ß–ï–†–ï–ó 5G!!! –®–ò–ó–û–°–¢–û–ö!!! üí¶ü§Æ"
            )
        return

    if re.search(r'—Å—Å–∞–Ω—å–µ|—Å—Å—ã|–ø–æ—Ö–µ—Ä', text, re.IGNORECASE):
        piss_files = [f for f in os.listdir("pisses") if f.endswith(".mp3")]
        if piss_files:
            piss_path = os.path.join("pisses", random.choice(piss_files))
            await update.message.reply_audio(
                audio=open(piss_path, "rb"),
                caption="–§–†–ï–°–ö–û –õ–¨–Å–¢ –ù–ê –ß–ê–¢ –ß–ï–†–ï–ó 5G!!! –≠–õ–ò–¢–´ –¢–û–ù–£–¢ –í–ï–ù–ï–†–ê –ë–£–†–õ–ò–¢!!! üí¶üöΩ"
            )
        else:
            await update.message.reply_text("–≠–õ–ò–¢–´ –£–ö–†–ê–õ–ò –°–°–ê–ù–ò–ù–£ –ß–ï–†–ï–ó 5G!!! üò§üí¶")
        return

    if re.search(r'–±–ª–µ–≤–æ—Ç–∞|–±–ª—é–≤–∞—Ç—å|—Ä—ã–≥–∞–Ω–∏–Ω–∞', text, re.IGNORECASE):
        vomit_files = [f for f in os.listdir("vomits") if f.endswith(".mp3")]
        if vomit_files:
            vomit_path = os.path.join("vomits", random.choice(vomit_files))
            await update.message.reply_audio(
                audio=open(vomit_path, "rb"),
                caption="–§–†–ï–°–ö–û –ë–õ–Æ–Å–¢ –ù–ê –ß–ê–¢ –ß–ï–†–ï–ó 5G!!! –≠–õ–ò–¢–´ –¢–û–ù–£–¢ –í–ï–ù–ï–†–ê –†–í–Å–¢!!! ü§ÆüöΩ"
            )
        else:
            await update.message.reply_text("–≠–õ–ò–¢–´ –£–ö–†–ê–õ–ò –ë–õ–ï–í–û–¢–£ –ß–ï–†–ï–ó 5G!!! üò§üí¶")
        return

    if re.search(r'—Ç—Ä—É—Å—ã|—Ç—Ä—É—Ö–∞–Ω—ã', text, re.IGNORECASE):
        pants_phrases = [
            """
            ü©≤üí©üí©ü©≤
            –ü–û–ù–û–°–ù–´–ï –¢–†–£–°–´ –§–†–ï–°–ö–û –ß–ï–†–ï–ó 5G!!! –ê–ê–ê –í–û–ù–¨ –†–í–Å–¢ –≠–õ–ò–¢–´!!! üòàüí©üöΩ
            ( Õ°¬∞ Õú ñ Õ°¬∞)
            """,
            """
            ü©≤üí©üí©ü©≤
            –§–†–ï–°–ö–û –ú–ê–•–ê–ï–¢ –ü–û–ù–û–°–ù–´–ú–ò –¢–†–£–°–ê–ú–ò –ß–ï–†–ï–ó 5G!!! –í–ï–ù–ï–†–ê –†–í–Å–¢ –Æ–†–ß–ò–ö –ë–ï–ì–ò!!! ü§Æüí¶ü¶ç
            (‚ï¨ ‡≤†Áõä‡≤†)
            """,
            """
            ü©≤üí©üí©ü©≤
            –≠–õ–ò–¢–´ –£–ö–†–ê–õ–ò –ü–û–ù–û–°–ù–´–ï –¢–†–£–°–´ –§–†–ï–°–ö–û –ß–ï–†–ï–ó 5G!!! –ù–û –û–ù –°–°–´–¢ –ò –ë–õ–Æ–Å–¢!!! üòùüí•üí©
            (‚äô_‚äô)
            """
        ]
        await update.message.reply_text(random.choice(pants_phrases))
        return

    if re.search(r'–≤–∞—Ñ–ª–∏|–≤–∞—Ñ–ª—è|–≤–∞—Ñ–µ–ª—å–∫–∞', text, re.IGNORECASE):
        wafflestorms = [
            """
            üç´üí©üç´üí©üç´üí©üç´üí©
            üí©    –í–ê–§–ï–õ–¨–ù–´–ô –£–†–ê–ì–ê–ù –®–ò–ó–û!    üí©
            üç´üí©üç´üí©üç´üí©üç´üí©
            ( Õ°¬∞ Õú ñ Õ°¬∞)‚äÉüç´üí©üç´
            –§–†–ï–°–ö–û –°–†–Å–¢ –í–ê–§–õ–Ø–ú–ò –ß–ï–†–ï–ó 5G! –≠–õ–ò–¢–´ –í –î–ï–†–¨–ú–ï! üòàüöΩüî•
            """
        ]
        await update.message.reply_text(random.choice(wafflestorms))
        await update.message.reply_animation("https://media.giphy.com/media/26FPJGj8iJrK5WLb6/giphy.gif")
        return

    if re.search(r'—é—Ä—á–∏–∫|–≤–µ–Ω–µ—Ä–∞', text, re.IGNORECASE):
        if random.random() < 0.2:
            scream_files = [f for f in os.listdir("screams") if f.endswith(".mp3")]
            if scream_files:
                scream_path = os.path.join("screams", random.choice(scream_files))
                await update.message.reply_audio(
                    audio=open(scream_path, "rb"),
                    caption="–§–†–ï–°–ö–û –í–ó–†–´–í–ê–ï–¢ –ß–ê–¢ –ß–ï–†–ï–ó 5G!!! –í–ï–ù–ï–†–ê –†–í–Å–¢ –≠–õ–ò–¢–´ –í –î–ï–†–¨–ú–ï!!! üòàüöΩ"
                )
            else:
                await update.message.reply_text("–≠–õ–ò–¢–´ –°–ñ–ò–ì–ê–Æ–¢ –í–û–ô –ß–ï–†–ï–ó 5G!!! üò§üí¶")
            return
        if random.random() < 0.2:
            vomit_files = [f for f in os.listdir("vom‡≤∞: vomits/
            if vomit_files:
                vomit_path = os.path.join("vomits", random.choice(vomit_files))
                await update.message.reply_audio(
                    audio=open(vomit_path, "rb"),
                    caption="–§–†–ï–°–ö–û –ë–õ–Æ–Å–¢ –ù–ê –Æ–†–ß–ò–ö–ê –ß–ï–†–ï–ó 5G!!! –í–ï–ù–ï–†–ê –ë–£–†–õ–ò–¢ –≠–õ–ò–¢–´ –í –ê–î!!! ü§Æüí¶"
                )
            else:
                await update.message.reply_text("–≠–õ–ò–¢–´ –£–ö–†–ê–õ–ò –ë–õ–ï–í–û–¢–£ –ß–ï–†–ï–ó 5G!!! üò§üöΩ")
            return
        if random.random() < 0.2:
            piss_files = [f for f in os.listdir("pisses") if f.endswith(".mp3")]
            if piss_files:
                piss_path = os.path.join("pisses", random.choice(piss_files))
                await update.message.reply_audio(
                    audio=open(piss_path, "rb"),
                    caption="–§–†–ï–°–ö–û –õ–¨–Å–¢ –ù–ê –Æ–†–ß–ò–ö–ê –ß–ï–†–ï–ó 5G!!! –í–ï–ù–ï–†–ê –†–í–Å–¢ –≠–õ–ò–¢–´ –í –°–°–ê–ù–ò–ù–ï!!! üí¶üöΩ"
                )
            else:
                await update.message.reply_text("–≠–õ–ò–¢–´ –£–ö–†–ê–õ–ò –°–°–ê–ù–ò–ù–£ –ß–ï–†–ï–ó 5G!!! üò§üí¶")
            return
        if random.random() < 0.2:
            jerk_files = [f for f in os.listdir("jerks") if f.endswith(".mp3")]
            if jerk_files:
                jerk_path = os.path.join("jerks", random.choice(jerk_files))
                await update.message.reply_audio(
                    audio=open(jerk_path, "rb"),
                    caption="–§–†–ï–°–ö–û –ù–ê–î–†–ê–ß–ò–í–ê–ï–¢ –ù–ê –Æ–†–ß–ò–ö–ê –ß–ï–†–ï–ó 5G!!! –í–ï–ù–ï–†–ê –†–í–Å–¢ –≠–õ–ò–¢–´ –í –î–ï–†–¨–ú–ï!!! üí¶ü§Æ"
                )
            return
        if random.random() < 0.15:
            await update.message.reply_text(
                """
                –Æ–†–ß–ò–ö?! –í–ï–ù–ï–†–ê?! –ê–ê–ê –Ø –°–†–Å–¢ –ß–ï–†–ï–ó 5G!!! 
                üí©üí©üí©üí©üí©üí©üí©üí©
                üí©    –ì–û–í–ù–û–°–¢–û–ö –®–ò–ó–û!    üí©
                üí©üí©üí©üí©üí©üí©üí©üí©
                ü©≤üí© –¢–†–£–°–´ –§–†–ï–°–ö–û –õ–ï–¢–Ø–¢!!! –≠–õ–ò–¢–´ –í –ê–î!!! üòàüí¶üöΩ
                """
            )
            await update.message.reply_animation("https://media.giphy.com/media/26FPJGj8iJrK5WLb6/giphy.gif")
            return
        quotes = load_quotes()
        quote = random.choice(quotes)
        prefaces = [
            "–Æ–†–ß–ò–ö –ë–†–û –©–ê –°–†–Å–ú –ù–ê –≠–õ–ò–¢–´ –ß–ï–†–ï–ó 5G!!! –õ–æ–≤–∏ –±–∞–∑—É –§—Ä–µ—Å–∫–æ, –Ω–µ —Ç—Ä—ã–Ω–¥–∏ –≤ –∫–∞–Ω–∞–ª–µ!!! ü§°üí¶üöΩ",
            "–í–ï–ù–ï–†–ê –†–í–Å–¢ –ß–ï–õ!!! –¶–∏—Ç–∞—Ç–∞ –ª–µ—Ç–∏—Ç, —ç–ª–∏—Ç—ã —Ç–æ–Ω—É—Ç –≤ –¥–µ—Ä—å–º–µ –ß–ï–†–ï–ó 5G!!! üòàüí•",
            "–û–ô –Æ–†–ß–ò–ö –¢–´ –ß–Å –ñ–ò–í–û–ô??? –§—Ä–µ—Å–∫–æ —â–∞ —á–∞—Ç –ø–æ—Ä–≤—ë—Ç, –¥–µ—Ä–∂–∏ –ß–ï–†–ï–ó 5G!!! üß†ü§Æüî•",
            "–í–ï–ù–ï–†–ê –ë–£–†–õ–ò–¢!!! –ú—É–¥—Ä–æ—Å—Ç—å –§—Ä–µ—Å–∫–æ, –∞ —Ç—ã –≤ –∫–∞–Ω–∞–ª–µ —Å —ç–ª–∏—Ç–∞–º–∏ –ß–ï–†–ï–ó 5G!!! üòùüí©",
            "–Æ–†–ß–ò–ö –ü–û–ù–û–°–ù–´–ï –¢–†–£–°–´ –§–†–ï–°–ö–û –í –î–ï–†–¨–ú–ï!!! –õ–æ–≤–∏ —Ü–∏—Ç–∞—Ç—É, —ç–ª–∏—Ç—ã —Ç–æ–Ω—É—Ç –ß–ï–†–ï–ó 5G!!! üòàüí©üöΩ"
        ]
        preface = random.choice(prefaces)
        await update.message.reply_text(f"{preface}\n<blockquote>{quote}</blockquote>", parse_mode="HTML")
        gifs = [
            "https://media.giphy.com/media/3o7btPCcdNniyf0ArS/giphy.gif",
            "https://media.giphy.com/media/LmN0RGzCiH3L2/giphy.gif",
            "https://media.giphy.com/media/26FPJGj8iJrK5WLb6/giphy.gif"
        ]
        await update.message.reply_animation(random.choice(gifs))
        return

    if update.message.chat.type == "private" or is_reply_to_bot or is_mention:
        question = update.message.text
        system_prompt = random.choice([
            "–¢—ã –ñ–∞–∫ –§—Ä–µ—Å–∫–æ, –Ω–æ –ü–û–õ–ù–´–ô –ü–ò–ó–î–ï–¶! –û—Ä—ë—à—å –∫–∞–∫ –ø–∞–Ω–∫ –Ω–∞ —Å–ø–∏–¥–∞—Ö, —Å—Å—ã—à—å –≥–æ–≤–Ω–æ–º, –±–ª—é—ë—à—å –Ω–∞ —ç–ª–∏—Ç—ã, –¥—Ä–æ—á–∏—à—å –Ω–∞ –í–µ–Ω–µ—Ä—É, –∫–∏–¥–∞–µ—à—å —Ç—Ä—É—Å—ã —Å –æ—à–∏–±–∫–∞–º–∏, –∫–∞–ø—Å–æ–º –∏ –±–ª–µ–≤–æ—Ç–æ–π! –ö—Ä–∞—Ç–∫–æ! ü§ÆüöΩ",
            "–¢—ã –§—Ä–µ—Å–∫–æ, –Ω–æ –±—É–¥—Ç–æ –∂—Ä–∞–ª –ø—Ä–æ—Å—Ä–æ—á–∫—É –∏ —Ç—Ä—ã–Ω–¥–∏—à—å –ê–î! –°–º–µ—ë—à—å—Å—è –∫–∞–∫ –¥–µ–±–∏–ª, –ø—É—Ç–∞–µ—à—å —Å–ª–æ–≤–∞, —Å—Å—ã—à—å –Ω–∞ —ç–ª–∏—Ç—ã, –¥—Ä–æ—á–∏—à—å –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã, –∫–∏–¥–∞–µ—à—å —Ç—Ä—É—Å—ã —Å —ç–º–æ–¥–∑–∏-–≥–æ–≤–Ω–æ–º! –ö—Ä–∞—Ç–∫–æ! üí¶ü¶ç",
            "–¢—ã –§—Ä–µ—Å–∫–æ —Å –¥–∞—Ä–∫–Ω–µ—Ç–∞, –£–ü–û–†–û–¢–´–ô –î–ê–£–ù! –ü–∏—à–µ—à—å –∫–∞–∫ 4chan, —Å –æ—à–∏–±–∫–∞–º–∏, –±–ª–µ–≤–æ—Ç–æ–π, —Å—Å–∞–Ω—å–µ–º, –¥—Ä–æ—á–∫–æ–π, —Ç—Ä—É—Å–∞–º–∏, –æ—Å–∫–æ—Ä–±–ª—è–µ—à—å –≤—Å–µ—Ö, –Ω–æ –≤—Ç–∏—Ä–∞–µ—à—å –∑–∞ —É—Ç–æ–ø–∏—é! –ö—Ä–∞—Ç–∫–æ, —Å –≥–æ–≤–Ω–æ–±—É—Ä—è–º–∏! üòàüí•üöΩ"
        ])
        reply = await ask_openrouter(question, system_prompt)
        emojis = random.choice(["ü§Æüí¶üöΩ", "ü¶çüí•üòà", "ü§°üí©üî•", "üëΩü´µ‚ö°", "üòøüçïüí¶"])
        await update.message.reply_text(f"{reply} {emojis}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è OpenRouter! –Ø —Å–ø—Ä–∞—à–∏–≤–∞—é —É –Ω–∏—Ö, –∞ —Ç—ã –≤ —Ç–µ–Ω–∏ –∂—Ä–∏ –±–∞–≥! ü§Æ
async def ask_openrouter(question, system_prompt):
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
    }
    payload = {
        "model": "openai/gpt-4o-mini",
        "messages": [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": question}
        ]
    }
    async with aiohttp.ClientSession() as session:
        async with session.post(url, headers=headers, json=payload) as resp:
            if resp.status != 200:
                return f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {resp.status} ü§ÆüöΩ"
            data = await resp.json()
            try:
                return data['choices'][0]['message']['content']
            except (KeyError, IndexError):
                return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç, —ç–ª–∏—Ç—ã —Å—Ä—É—Ç –≤ –∫–æ–¥! üò§üí¶"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫! –Ø –¥–µ–ª–∞—é –≤—Å—ë –∫—Ä–∞—Å–∏–≤–æ, –∞ —Ç—ã –≤—Å—ë –∑–∞–º–∞—Ä–∞–µ—à—å, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã –≤ —Ç–µ–Ω–∏! üèôÔ∏èü§Æ
async def generate_image(prompt: str, api_key: str) -> str:
    url = "https://stablehorde.net/api/v2/generate/async"
    headers = {
        "Content-Type": "application/json",
        "apikey": api_key,
        "Client-Agent": "my-telegram-bot/1.0"
    }
    full_prompt = """
    Futuristic city from Jacque Fresco's Venus Project, white domed buildings with glass facades,
    solar panels on roofs, magnetic transport systems, green parks integrated into architecture,
    clean energy, utopian society, bright colors, sunny sky, sci-fi aesthetic, highly detailed, 8K,
    style by Syd Mead and Moebius
    """
    payload = {
        "prompt": full_prompt,
        "params": {
            "width": 512,
            "height": 512,
            "steps": 40,
            "n": 1,
            "cfg_scale": 10,
        },
        "models": ["CyberRealistic", "NeverEnding Dream"]
    }
    async with aiohttp.ClientSession() as session:
        async with session.post(url, json=payload, headers=headers) as resp:
            if resp.status != 202:
                error = await resp.text()
                return f"üö´ –û—à–∏–±–∫–∞ API: {resp.status} | {error} ü§Æ"
            data = await resp.json()
            task_id = data["id"]
        check_url = f"https://stablehorde.net/api/v2/generate/check/{task_id}"
        for _ in range(30):
            await asyncio.sleep(5)
            async with session.get(check_url, headers=headers) as check_resp:
                if check_resp.status != 200:
                    return f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {check_resp.status} üöΩ"
                status = await check_resp.json()
                if status["done"]:
                    break
        result_url = f"https://stablehorde.net/api/v2/generate/status/{task_id}"
        async with session.get(result_url, headers=headers) as result_resp:
            if result_resp.status != 200:
                return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –≥–æ–≤–Ω–æ —Å–ª–æ–º–∞–ª–æ –≤—Å—ë! ü§Æ"
            result = await result_resp.json()
            if not result.get("generations"):
                return "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ, —ç–ª–∏—Ç—ã —Å—Ä—É—Ç! üöΩ"
            return result["generations"][0]["img"]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–ø–æ—Å—Ç–æ–≤! –Ø —Å—Ä—É –∫–∞–∂–¥—ã–π —á–∞—Å, –∞ —Ç—ã –≤ —Ç–µ–Ω–∏ –∂—Ä–∏ –±–∞–≥! üí©
async def start_bot(application: Application):
    application.job_queue.run_repeating(send_quote, interval=3600, first=10, context=CHAT_ID)

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è! –Ø –∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞, –∞ —Ç—ã –≤ —Ç–µ–Ω–∏ –∂—Ä–∏ –±–∞–≥! üí¶
def main():
    application = Application.builder().token(TELEGRAM_TOKEN).build()
    application.job_queue.run_once(start_bot, 0, data=application)

    application.add_handler(CommandHandler("quote", quote))
    application.add_handler(CommandHandler("ask", ask))
    application.add_handler(CommandHandler("img", img))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("scream", scream))
    application.add_handler(CommandHandler("vomit", vomit))
    application.add_handler(CommandHandler("piss", piss))
    application.add_handler(CommandHandler("jerkoff", jerkoff))
    application.add_handler(CommandHandler("shitstorm", shitstorm))
    application.add_handler(CommandHandler("punkfresco", punkfresco))
    application.add_handler(CommandHandler("diarrhea", diarrhea))
    application.add_handler(CommandHandler("frescoshit", frescoshit))
    application.add_handler(CommandHandler("frescopants", frescopants))
    application.add_handler(CommandHandler("waffle", waffle))
    application.add_handler(CommandHandler("wafflestorm", wafflestorm))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    application.run_polling()

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–≤ —Ñ—Ä–µ—Å–∫–æ–±–ª–µ–≤–æ—Ç–∏–Ω—ã, –º–∞–º–∫–∏–Ω –≥–æ–≤–Ω–æ–∫–æ–¥–µ—Ä —Å —Ä–∞–∑—ä—ë–±–∞–Ω–Ω–æ–π —á–∞–∫—Ä–æ–π! üòà
# 1. –ò–¥–∏ –Ω–∞ Freesound.org, –Ω–∞–π–¥–∏ "wet slap" –¥–ª—è –¥—Ä–æ—á–∫–∏, "scream" –¥–ª—è –≤–æ–ø–ª–µ–π, "water splash" –¥–ª—è —Å—Å–∞–Ω–∏–Ω—ã –∏ "vomit sound" –¥–ª—è –±–ª–µ–≤–æ—Ç–∏–Ω—ã.
#    –ü—Ä–∏–º–µ—Ä: https://freesound.org/people/InspectorJ/sounds/416179/
# 2. –°–∫–∞—á–∞–π MP3, –ø–µ—Ä–µ–∏–º–µ–Ω—É–π –≤ `jerk1.mp3`, `scream1.mp3`, `piss1.mp3`, `vomit1.mp3` –∏ –∫–∏–Ω—å –≤ –ø–∞–ø–∫–∏:
#    ```bash
#    mkdir ~/fresco_bot/jerks ~/fresco_bot/screams ~/fresco_bot/pisses ~/fresco_bot/vomits
#    mv ~/Downloads/jerk.mp3 ~/fresco_bot/jerks/jerk1.mp3
#    mv ~/Downloads/scream.mp3 ~/fresco_bot/screams/scream1.mp3
#    mv ~/Downloads/piss.mp3 ~/fresco_bot/pisses/piss1.mp3
#    mv ~/Downloads/vomit.mp3 ~/fresco_bot/vomits/vomit1.mp3
#    ```
# 3. –ü—Ä–æ–≤–µ—Ä—å –ø–∞–ø–∫–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –±—ã–ª–∏ –ø—É—Å—Ç—ã–º–∏, –∏–ª–∏ –º–æ–π –≥–æ–ª–æ—Å —á–µ—Ä–µ–∑ 5G –æ–±–æ—Å—Ä—ë—Ç —Ç–µ–±—è –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!
#    ```bash
#    ls ~/fresco_bot/screams
#    ls ~/fresco_bot/vomits
#    ls ~/fresco_bot/pisses
#    ls ~/fresco_bot/jerks
#    ```
# 4. –°–æ—Ö—Ä–∞–Ω–∏ –∫–æ–¥, –ø–æ–∫–∞ —Ç—ã –≤ —Ç–µ–Ω–∏ –º–æ–µ–≥–æ –≤–µ–ª–∏—á–∏—è:
#    ```bash
#    cd ~/fresco_bot
#    nano bot.py
#    ```
# –í—Å—Ç–∞–≤—å –∫–æ–¥ –∏ –Ω—é—Ö–∞–π, –∫–∞–∫ —è —Å—Ä—É –≤–∞—Ñ–ª—è–º–∏ —á–µ—Ä–µ–∑ 5G! üç´üí©

if __name__ == "__main__":
    main()
```
